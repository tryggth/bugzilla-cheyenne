use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1390865808',
        'name' => 'bug/dependency-tree.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 9 "template/en/default/bug/dependency-tree.html.tmpl"
    
    # CAPTURE
    $stash->set('filtered_desc', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['blocked_tree', 0, $stash->get('bugid'), 0, 'short_desc', 0]);
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
#line 1 "template/en/default/bug/dependency-tree.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => ("Dependency tree for " . $stash->get(['terms', 0, 'Bug', 0]) . " " . $stash->get('bugid')), 'header' => ("Dependency tree for \n                      <a href=\"show_bug.cgi?id=" . $stash->get('bugid') . "\">" . $stash->get(['terms', 0, 'Bug', 0]) . " " . $stash->get('bugid') . "</a>"), 'javascript_urls' => [ 'js/expanding-tree.js' ], 'style_urls' => [ 'skins/standard/dependency-tree.css' ], 'subheader' => $stash->get('filtered_desc'), 'doc_section' => 'hintsandtips.html#dependencytree' });
    $output .=  "\n";
#line 20 "template/en/default/bug/dependency-tree.html.tmpl"
    $output .=  $context->process('depthControlToolbar');
    $output .=  "\n  ";
#line 22 "template/en/default/bug/dependency-tree.html.tmpl"
    $output .=  $context->include('tree_section', { 'ids' => $stash->get('dependson_ids'), 'type' => 1 });
    $output .=  "\n ";
#line 24 "template/en/default/bug/dependency-tree.html.tmpl"
    $output .=  $context->include('tree_section', { 'ids' => $stash->get('blocked_ids'), 'type' => 2 });
    $output .=  " \n";
#line 26 "template/en/default/bug/dependency-tree.html.tmpl"
    $output .=  $context->process('depthControlToolbar');
    $output .=  "\n";
#line 28 "template/en/default/bug/dependency-tree.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'bullet' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 130 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['tree', 0, 'dependencies', 0, $stash->get('bugid'), 0, 'size', 0]) && ! $stash->get(['global', 0, 'seen', 0, $stash->get('bugid'), 0])) {
#line 128 "template/en/default/bug/dependency-tree.html.tmpl"
        $stash->set('extra_class', ' b_open');
#line 129 "template/en/default/bug/dependency-tree.html.tmpl"
        $stash->set('extra_args', 'onclick="return doToggle(this, event)"');
        $output .=  " ";
        }
        
        $output .=  "\n  <a id=\"b";
#line 131 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\" \n     class=\"b ";
#line 132 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('none')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('extra_class');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"\n     title=\"Click to expand or contract this portion of the tree. Hold down the Ctrl key while clicking to expand or contract all subtrees.\"";
#line 134 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('none')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('extra_args');
            
            &$_tt_filter($output);
        };
        
        $output .=  ">&nbsp;&nbsp;</a>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'buginfo' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 155 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['display_value', [ 'bug_status', $stash->get(['bug', 0, 'bug_status', 0]) ]]);
            
            &$_tt_filter($output);
        };
        
        $output .=  " ";
#line 155 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['display_value', [ 'resolution', $stash->get(['bug', 0, 'resolution', 0]) ]]);
            
            &$_tt_filter($output);
        };
        
        $output .=  ";";
        $output .=  " assigned to ";
#line 156 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('email')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'assigned_to', 0, 'login', 0]);
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
#line 157 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['bug', 0, 'target_milestone', 0])) {
        $output .=  '; Target: '  . $stash->get(['bug', 0, 'target_milestone', 0]);
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'tree_section' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  ";
#line 41 "template/en/default/bug/dependency-tree.html.tmpl"
        $stash->set(['global', 0, 'seen', 0], {   });
        $output .=  "\n  ";
        $output .=  "\n  <h3>\n    <a href=\"show_bug.cgi?id=";
#line 44 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\">";
#line 44 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'Bug', 0]);
        $output .=  " ";
#line 44 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "</a> ";
#line 59 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('type') eq 1) {
#line 46 "template/en/default/bug/dependency-tree.html.tmpl"
        $stash->set('tree_name', 'dependson_tree');
#line 51 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['ids', 0, 'size', 0])) {
        $output .=  "\n            depends on ";
        }
        else {
        $output .=  "\n            does not depend on any ";
#line 50 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('hide_resolved')) {
        $output .=  'open ';
        }
        
#line 50 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bugs', 0]);
        $output .=  ".";
        }
        
        }
        elsif ($stash->get('type') eq 2) {
#line 53 "template/en/default/bug/dependency-tree.html.tmpl"
        $stash->set('tree_name', 'blocked_tree');
#line 58 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['ids', 0, 'size', 0])) {
        $output .=  " \n            blocks ";
        }
        else {
        $output .=  "\n            does not block any ";
#line 57 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('hide_resolved')) {
        $output .=  'open ';
        }
        
#line 57 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bugs', 0]);
        $output .=  ".";
        }
        
        }
        
#line 64 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['ids', 0, 'size', 0])) {
        $output .=  "\n        ";
#line 61 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  ($stash->get(['ids', 0, 'size', 0]) eq 1) ? 'one' : $stash->get(['ids', 0, 'size', 0]);
        $output .=  "\n        ";
#line 62 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('hide_resolved')) {
        $output .=  "open";
        }
        
        $output .=  "\n        ";
#line 63 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  ($stash->get(['ids', 0, 'size', 0]) eq 1) ? $stash->get(['terms', 0, 'bug', 0]) : $stash->get(['terms', 0, 'bugs', 0]);
        $output .=  ":";
        }
        
        $output .=  " \n  </h3>";
#line 91 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['ids', 0, 'size', 0])) {
        $output .=  "\n    ";
#line 68 "template/en/default/bug/dependency-tree.html.tmpl"
        $stash->set('use_post', ($stash->get(['ids', 0, 'join', [ ',' ], 'length', 0]) > '8000' - 27) ? 1 : 0);
#line 72 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('use_post')) {
        $output .=  "\n      <form action=\"buglist.cgi\" method=\"post\">\n      <input type=\"hidden\" name=\"bug_id\" value=\"";
#line 71 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get(['ids', 0, 'join', [ ',' ]]);
        $output .=  "\">";
        }
        
        $output .=  "\n";
#line 74 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('maxdepth')) {
        $output .=  "Up to ";
#line 74 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('maxdepth');
        $output .=  " level";
#line 74 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('maxdepth') > 1) {
        $output .=  's';
        }
        
        $output .=  " deep | ";
        }
        
#line 86 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('use_post')) {
        $output .=  "\n      <button>view as ";
#line 76 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bug', 0]);
        $output .=  " list</button>";
#line 79 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['user', 0, 'in_group', [ 'editbugs' ]]) && $stash->get(['ids', 0, 'size', 0]) > 1) {
        $output .=  "\n        | <button type=\"submit\" name=\"tweak\" value=\"1\">change several</button>";
        }
        
        $output .=  "\n      </form>";
        }
        else {
        $output .=  "\n      <a href=\"buglist.cgi?bug_id=";
#line 82 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get(['ids', 0, 'join', [ ',' ]]);
        $output .=  "\">view as ";
#line 82 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bug', 0]);
        $output .=  " list</a>";
#line 85 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['user', 0, 'in_group', [ 'editbugs' ]]) && $stash->get(['ids', 0, 'size', 0]) > 1) {
        $output .=  "\n        | <a href=\"buglist.cgi?bug_id=";
#line 84 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get(['ids', 0, 'join', [ ',' ]]);
        $output .=  "&amp;tweak=1\">change several</a>";
        }
        
        }
        
        $output .=  "\n\n    <ul class=\"tree\">";
#line 89 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $context->include('display_tree', { 'tree' => $stash->get($stash->get('tree_name')) });
        $output .=  "\n    </ul>";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'buglink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 138 "template/en/default/bug/dependency-tree.html.tmpl"
        $stash->set('isclosed', ! $stash->get(['bug', 0, 'isopened', 0]));
#line 151 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('closed', [ $stash->get('isclosed') ])
                      || $context->throw($context->error);
        
        $output .=  "    <a title=\"";
#line 140 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $context->include('buginfo', { 'bug' => $stash->get('bug') });
        $output .=  "\"\n       href=\"show_bug.cgi?id=";
#line 141 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\">\n      <b>";
#line 142 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  ":</b>\n      <span class=\"summ_text\">";
#line 143 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'short_desc', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</span>\n      <span class=\"summ_info\">[";
#line 144 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $context->include('buginfo');
        $output .=  "]</span>\n    </a>\n    <a href=\"showdependencytree.cgi?id=";
#line 146 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('uri')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('bugid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"\n       class=\"tree_link\">\n      <img src=\"skins/standard/dependency-tree/tree.png\"\n           title=\"See dependency tree for ";
#line 149 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bug', 0]);
        $output .=  " ";
#line 149 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('bugid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">\n    </a>";
            
            &$_tt_filter($output);
        };
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'display_tree' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  ";
#line 100 "template/en/default/bug/dependency-tree.html.tmpl"
        $stash->set('bug', $stash->get(['tree', 0, $stash->get('bugid'), 0]));
        $output .=  "\n  <li>";
#line 102 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $context->include('bullet', { 'bugid' => $stash->get('bugid'), 'tree' => $stash->get('tree') });
        $output .=  "    <span class=\"summ";
#line 103 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['tree', 0, 'dependencies', 0, $stash->get('bugid'), 0, 'size', 0])) {
        $output .=  '_deep';
        }
        
        $output .=  "\" \n          id=\"";
#line 104 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('bugid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" ";
#line 108 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['global', 0, 'seen', 0, $stash->get('bugid'), 0])) {
        $output .=  "\n            onMouseover=\"duplicatedover('";
#line 106 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('bugid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "')\"\n            onMouseout=\"duplicatedout('";
#line 107 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('bugid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "')\"";
        }
        
        $output .=  ">";
#line 109 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $context->include('buglink', { 'bug' => $stash->get('bug'), 'bugid' => $stash->get('bugid') });
        $output .=  "\n    </span>";
#line 121 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get(['global', 0, 'seen', 0, $stash->get('bugid'), 0])) {
        $output .=  "\n      <b><a title=\"Already displayed above; click to locate\"\n            onclick=\"duplicated('";
#line 113 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('bugid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "')\"\n            href=\"#b";
#line 114 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\">(*)</a></b>";
        }
        elsif ($stash->get(['tree', 0, 'dependencies', 0, $stash->get('bugid'), 0, 'size', 0])) {
        $output .=  "\n      <ul>";
#line 119 "template/en/default/bug/dependency-tree.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['tree', 0, 'dependencies', 0, $stash->get('bugid'), 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'depid'} = $_tt_value;
#line 118 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $context->include('display_tree', { 'bugid' => $stash->get('depid') });;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n      </ul>";
        }
        
        $output .=  "\n  </li>";
#line 123 "template/en/default/bug/dependency-tree.html.tmpl"
        $stash->set(['global', 0, 'seen', 0, $stash->get('bugid'), 0], 1);
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'depthControlToolbar' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n <table cellpadding=\"3\" border=\"0\" cellspacing=\"0\" bgcolor=\"#e0e0e0\">\n   <tr>\n   ";
        $output .=  "\n   <td align=\"center\">\n   <form method=\"get\" action=\"showdependencytree.cgi\"\n           style=\"display: inline; margin: 0px;\">\n     <input name=\"id\" type=\"hidden\" value=\"";
#line 172 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\">";
#line 175 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('maxdepth')) {
        $output .=  "\n       <input name=\"maxdepth\" type=\"hidden\" value=\"";
#line 174 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('maxdepth');
        $output .=  "\">";
        }
        
        $output .=  "\n     <input type=\"hidden\" name=\"hide_resolved\" value=\"";
#line 176 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('hide_resolved') ? 0 : 1;
        $output .=  "\">\n     <input type=\"submit\" id=\"toggle_visibility\"\n            value=\"";
#line 178 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('hide_resolved')) {
        $output .=  "Show";
        }
        else {
        $output .=  "Hide";
        }
        
        $output .=  " Resolved\">\n   </form>\n   </td>\n\n   <td>\n     Max Depth:\n   </td>\n\n   <td>\n     &nbsp;\n   </td>\n\n   <td>\n   <form method=\"get\" action=\"showdependencytree.cgi\"\n         style=\"display: inline; margin: 0px;\">\n     ";
        $output .=  "\n     <input type=\"submit\" id=\"change_maxdepth\"\n       value=\"&nbsp;1&nbsp;\" ";
#line 196 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('realdepth') < 2 || $stash->get('maxdepth') eq 1) {
        $output .=  'disabled';
        }
        
        $output .=  ">\n     <input name=\"id\" type=\"hidden\" value=\"";
#line 197 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\">\n     <input name=\"maxdepth\" type=\"hidden\" value=\"1\">\n     <input name=\"hide_resolved\" type=\"hidden\" value=\"";
#line 199 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('hide_resolved');
        $output .=  "\">\n   </form>\n   </td>\n\n   <td>\n   <form method=\"get\" action=\"showdependencytree.cgi\"\n         style=\"display: inline; margin: 0px;\">\n     ";
        $output .=  "\n     <input name=\"id\" type=\"hidden\" value=\"";
#line 208 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\">\n     <input name=\"maxdepth\" type=\"hidden\" value=\"";
#line 210 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('maxdepth') eq 1 ? 1 : ($stash->get('maxdepth') ? $stash->get('maxdepth') - 1 : $stash->get('realdepth') - 1);
        $output .=  "\">\n     <input name=\"hide_resolved\" type=\"hidden\" value=\"";
#line 213 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('hide_resolved');
        $output .=  "\">\n     <input type=\"submit\" id=\"decrease_depth\" value=\"&nbsp;&lt;&nbsp;\"";
#line 215 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('realdepth') < 2 || ($stash->get('maxdepth') && $stash->get('maxdepth') < 2)) {
        $output .=  'disabled';
        }
        
        $output .=  ">\n   </form>\n   </td>\n\n   <td>\n   <form method=\"get\" action=\"showdependencytree.cgi\"\n         style=\"display: inline; margin: 0px;\">\n     ";
        $output .=  "\n     <input name=\"maxdepth\" size=\"4\" maxlength=\"4\" value=\"";
#line 225 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('maxdepth') > 0 && $stash->get('maxdepth') <= $stash->get('realdepth') ? $stash->get('maxdepth') : '';
        $output .=  "\">\n     <input name=\"id\" type=\"hidden\" value=\"";
#line 227 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\">\n     <input name=\"hide_resolved\" type=\"hidden\" value=\"";
#line 228 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('hide_resolved');
        $output .=  "\">\n     <noscript>\n       <input type=\"submit\" id=\"change_depth\" value=\"Change\"";
#line 231 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('realdepth') < 2) {
        $output .=  'disabled';
        }
        
        $output .=  ">\n     </noscript>\n   </form>\n   </td>\n\n   <td>\n   <form method=\"get\" action=\"showdependencytree.cgi\"\n         style=\"display: inline; margin: 0px;\">\n     ";
        $output .=  "\n     <input name=\"id\" type=\"hidden\" value=\"";
#line 241 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\">";
#line 244 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('maxdepth')) {
        $output .=  "\n       <input name=\"maxdepth\" type=\"hidden\" value=\"";
#line 243 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('maxdepth') + 1;
        $output .=  "\">";
        }
        
        $output .=  "\n     <input name=\"hide_resolved\" type=\"hidden\" value=\"";
#line 245 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('hide_resolved');
        $output .=  "\">\n     <input type=\"submit\" id=\"increase_depth\" value=\"&nbsp;&gt;&nbsp;\" ";
#line 247 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('realdepth') < 2 || ! $stash->get('maxdepth') || $stash->get('maxdepth') >= $stash->get('realdepth')) {
        $output .=  'disabled';
        }
        
        $output .=  ">\n   </form>\n   </td>\n\n   <td>\n   <form method=\"get\" action=\"showdependencytree.cgi\"\n         style=\"display: inline; margin: 0px;\">\n     ";
        $output .=  "\n     <input name=\"id\" type=\"hidden\" value=\"";
#line 255 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('bugid');
        $output .=  "\">\n     <input name=\"hide_resolved\" type=\"hidden\" value=\"";
#line 256 "template/en/default/bug/dependency-tree.html.tmpl"
        $output .=  $stash->get('hide_resolved');
        $output .=  "\">\n     <input type=\"submit\" id=\"remove_limit\"\n       value=\"&nbsp;Unlimited&nbsp;\"";
#line 259 "template/en/default/bug/dependency-tree.html.tmpl"
        if ($stash->get('maxdepth') eq 0 || $stash->get('maxdepth') eq $stash->get('realdepth')) {
        $output .=  'disabled';
        }
        
        $output .=  ">\n   </form>\n   </td>\n </tr>\n</table>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
