use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1390865808',
        'name' => 'bug/process/verify-new-product.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 20 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Verify New Product Details...' });
    $output .=  "\n\n<form action=\"process_bug.cgi\" method=\"post\">\n";
#line 25 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $stash->set('exclude_items', [ 'version', 'component', 'target_milestone' ]);
#line 28 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get('verify_bug_groups')) {
#line 27 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['exclude_items', 0, 'push', [ 'groups', 'defined_groups' ]]);
    }
    
#line 29 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'exclude' ]]);
    $output .=  "\n";
#line 31 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $context->process('global/hidden-fields.html.tmpl', { 'exclude' => '^'  . $stash->get(['exclude_items', 0, 'join', [ '|' ]])  . '$' });
    $output .=  "\n\n<input type=\"hidden\" name=\"confirm_product_change\" value=\"1\">\n    \n";
    $output .=  "\n<h3>Verify Version, Component";
#line 38 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['Param', [ 'usetargetmilestone' ]]) && $stash->get(['bug', 0, 'check_can_change_field', [ 'target_milestone', 0, 1 ]])) {
    $output .=  ', Target Milestone';
    }
    
    $output .=  "</h3>\n\n<p>";
#line 55 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['Param', [ 'usetargetmilestone' ]]) && $stash->get(['bug', 0, 'check_can_change_field', [ 'target_milestone', 0, 1 ]])) {
    $output .=  "\n  You are moving the ";
#line 46 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "(s) to the product \n  <b>";
#line 47 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</b>,\n  and the version, component, and/or target milestone fields are no longer\n  correct.  Please set the correct version, component, and target milestone now:";
    }
    else {
    $output .=  "\n  You are moving the ";
#line 51 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "(s) to the product \n  <b>";
#line 52 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</b>,\n  and the version and component fields are no longer correct.\n  Please set the correct version and component now:";
    }
    
    $output .=  "\n</p>\n\n<table>\n  <tr>\n    <td>\n      <b>Version:</b><br>";
#line 66 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['versions', 0, 'size', 0]) eq 1) {
#line 63 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $stash->set('default_version', $stash->get(['versions', 0, 0, 0]));
    }
    else {
#line 65 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $stash->set('default_version', $stash->get(['defaults', 0, 'version', 0]));
    }
    
#line 67 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $context->process('global/select-menu.html.tmpl', { 'name' => 'version', 'options' => $stash->get('versions'), 'default' => $stash->get('default_version'), 'size' => 10 });
    $output .=  "\n    </td>\n    <td>\n      <b>Component:</b><br>";
#line 79 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['components', 0, 'size', 0]) eq 1) {
#line 76 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $stash->set('default_component', $stash->get(['components', 0, 0, 0]));
    }
    else {
#line 78 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $stash->set('default_component', $stash->get(['defaults', 0, 'component', 0]));
    }
    
#line 80 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $context->process('global/select-menu.html.tmpl', { 'name' => 'component', 'options' => $stash->get('components'), 'default' => $stash->get('default_component'), 'size' => 10 });
    $output .=  "\n    </td>";
#line 97 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['Param', [ 'usetargetmilestone' ]]) && $stash->get(['bug', 0, 'check_can_change_field', [ 'target_milestone', 0, 1 ]])) {
    $output .=  "\n      <td>\n        <b>Target Milestone:</b><br>";
#line 91 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $context->process('global/select-menu.html.tmpl', { 'name' => 'target_milestone', 'options' => $stash->get('milestones'), 'default' => $stash->get(['defaults', 0, 'milestone', 0]), 'size' => 10 });
    $output .=  "\n      </td>";
    }
    
#line 98 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'field' ]]);
    $output .=  "\n  </tr>\n</table>\n";
#line 215 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get('verify_bug_groups')) {
#line 103 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $stash->set('mandatory_groups', [ ]);
#line 104 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $stash->set('optional_groups', [ ]);
    $output .=  "\n";
#line 117 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'group_controls', 0, 'keys', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'gid'} = $_tt_value;
#line 107 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $stash->set('group', $stash->get(['product', 0, 'group_controls', 0, $stash->get('gid'), 0]));
#line 108 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if (!($stash->get(['group', 0, 'group', 0, 'is_active', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
    $output .=  "\n";
#line 116 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['group', 0, 'membercontrol', 0]) eq '3' || ($stash->get(['group', 0, 'othercontrol', 0]) eq '3' && ! $stash->get(['user', 0, 'in_group', [ $stash->get(['group', 0, 'group', 0, 'name', 0]) ]]))) {
#line 112 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['mandatory_groups', 0, 'push', [ $stash->get('group') ]]);
    }
    elsif (($stash->get(['group', 0, 'membercontrol', 0]) ne '0' && $stash->get(['user', 0, 'in_group', [ $stash->get(['group', 0, 'group', 0, 'name', 0]) ]])) || $stash->get(['group', 0, 'othercontrol', 0]) ne '0') {
#line 115 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['optional_groups', 0, 'push', [ $stash->get('group') ]]);
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  ";
#line 121 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['old_groups', 0, 'size', 0]) || $stash->get(['optional_groups', 0, 'size', 0]) || $stash->get(['mandatory_groups', 0, 'size', 0])) {
    $output .=  "\n    <h3>Verify ";
#line 120 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " Group</h3>";
    }
    
    $output .=  "\n  ";
#line 137 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['old_groups', 0, 'size', 0])) {
    $output .=  "\n    <p>These groups are not legal for the '";
#line 124 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'\n    product or you are not allowed to restrict ";
#line 125 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to these groups.\n    ";
#line 126 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  " will no longer be restricted to these groups and may become\n    public if no other group applies:<br>";
#line 135 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('old_groups');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'group'} = $_tt_value;
    $output .=  "\n      <input type=\"checkbox\" id=\"group_";
#line 129 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n             name=\"groups\" disabled=\"disabled\" value=\"";
#line 130 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n      <label for=\"group_";
#line 131 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 132 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ": ";
#line 132 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n      </label>\n      <br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </p>";
    }
    
    $output .=  "\n\n";
#line 199 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['optional_groups', 0, 'size', 0])) {
    $output .=  "\n    <p>These groups are optional. You can decide to restrict ";
#line 141 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to\n    one or more of the following groups:<br>";
#line 197 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get('multiple_bugs')) {
    $output .=  "\n      <script type=\"text/javascript\">\n        function turn_off(myself, id) {\n            var other_checkbox = document.getElementById(id);\n            if (myself.checked && other_checkbox) {\n                other_checkbox.checked = false;\n            }\n        }\n      </script>\n\n      <table border=\"1\">\n        <tr>\n          <th>Remove<br>";
#line 155 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  "<br>from this<br>group</th>\n          <th>Add<br>";
#line 156 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  "<br>to this<br>group</th>\n          <th>Group Name:</th>\n        </tr>\n";
#line 180 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('optional_groups');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'group'} = $_tt_value;
    $output .=  "\n        <tr>\n          <td align=\"center\">\n            <input type=\"checkbox\" name=\"defined_groups\"\n                   id=\"defined_group_";
#line 164 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                   value=\"";
#line 165 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 166 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['cgi', 0, 'param', [ 'defined_groups' ], 'contains', [ $stash->get(['group', 0, 'group', 0, 'name', 0]) ]])) {
    $output .=  " checked=\"checked\"";
    }
    
    $output .=  "\n                   onchange=\"turn_off(this, 'group_";
#line 167 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "')\">\n          </td>\n          <td align=\"center\">\n            <input type=\"checkbox\" name=\"groups\"\n                   id=\"group_";
#line 171 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                   value=\"";
#line 172 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 173 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['cgi', 0, 'param', [ 'groups' ], 'contains', [ $stash->get(['group', 0, 'group', 0, 'name', 0]) ]])) {
    $output .=  " checked=\"checked\"";
    }
    
    $output .=  "\n                   onchange=\"turn_off(this, 'defined_group_";
#line 174 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "')\">\n          </td>\n          <td>";
#line 177 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n          </td>\n        </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n      </table>";
    }
    else {
#line 196 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('optional_groups');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'group'} = $_tt_value;
    $output .=  "\n        <input type=\"hidden\" name=\"defined_groups\"\n               value=\"";
#line 185 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n        <input type=\"checkbox\" id=\"group_";
#line 186 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n               name=\"groups\"";
#line 188 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ((($stash->get(['group', 0, 'membercontrol', 0]) eq '2' && $stash->get(['user', 0, 'in_group', [ $stash->get(['group', 0, 'group', 0, 'name', 0]) ]])) || ($stash->get(['group', 0, 'othercontrol', 0]) eq '2' && ! $stash->get(['user', 0, 'in_group', [ $stash->get(['group', 0, 'group', 0, 'name', 0]) ]])) || $stash->get(['cgi', 0, 'param', [ 'groups' ], 'contains', [ $stash->get(['group', 0, 'group', 0, 'name', 0]) ]]))) {
    $output .=  ' checked="checked"';
    }
    
    $output .=  "\n               value=\"";
#line 191 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n        <label for=\"group_";
#line 192 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 193 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ": ";
#line 193 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n        </label>\n        <br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n    </p>";
    }
    
    $output .=  "\n";
#line 214 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['mandatory_groups', 0, 'size', 0])) {
    $output .=  "\n    <p>These groups are mandatory and ";
#line 202 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " will be automatically\n    restricted to these groups:<br>";
#line 212 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('mandatory_groups');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'group'} = $_tt_value;
    $output .=  "\n      <input type=\"checkbox\" id=\"group_";
#line 205 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n              checked=\"checked\" disabled=\"disabled\"\n             name=\"groups\" value=\"";
#line 207 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n      <label for=\"group_";
#line 208 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 209 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ": ";
#line 209 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'group', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n      </label>\n      <br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </p>";
    }
    
    }
    
    $output .=  "\n\n<input type=\"submit\" id=\"change_product\" value=\"Commit\">\n\n</form>\n<hr>\n\n";
    $output .=  "\n";
#line 230 "template/en/default/bug/process/verify-new-product.html.tmpl"
    if ($stash->get(['cgi', 0, 'param', [ 'id' ]]) && $stash->get(['cgi', 0, 'param', [ 'id' ], 'match', [ '^\d+$' ]])) {
#line 226 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $stash->set('id', $stash->get(['cgi', 0, 'param', [ 'id' ]]));
    $output .=  "\n  Cancel and Return to ";
#line 1 "template/en/default/bug/process/verify-new-product.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get('id') ])
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['terms', 0, 'bug', 0]) . " " . $stash->get('id'));
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    }
    else {
    $output .=  "\n  Cancel and Return to <a href=\"buglist.cgi?regetlastlist=1\">the last search results</a>";
    }
    
    $output .=  "\n";
#line 232 "template/en/default/bug/process/verify-new-product.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
