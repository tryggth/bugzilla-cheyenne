use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1390865808',
        'name' => 'flag/list.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 89 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'id', 0]) && ! $stash->get('read_only_flags') && (! $stash->get('bug') || $stash->get(['bug', 0, 'check_can_change_field', [ 'flagtypes.name', 0, 1 ]]))) {
    $output .=  "\n\n";
    $output .=  "\n";
#line 19 "template/en/default/flag/list.html.tmpl"
    $stash->set('flag_table_id', 'flags', 1);
    $output .=  "\n\n<script src=\"";
#line 21 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('mtime')
                  || $context->throw($context->error);
    
    $output .=  'js/flag.js';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" type=\"text/javascript\"></script>\n\n<table id=\"";
#line 23 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('flag_table_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 35 "template/en/default/flag/list.html.tmpl"
    if (!($stash->get('flag_no_header'))) {
    $output .=  "\n    <tr>\n      <th colspan=\"3\">\n        Flags:\n      </th>";
#line 33 "template/en/default/flag/list.html.tmpl"
    if ($stash->get('any_flags_requesteeble')) {
    $output .=  "\n        <th>\n          Requestee:\n        </th>";
    }
    
    $output .=  "\n    </tr>";
    }
    
    $output .=  "\n\n  ";
#line 50 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
    
#line 43 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['type', 0, 'flags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'flag'} = $_tt_value;
#line 42 "template/en/default/flag/list.html.tmpl"
    $output .=  $context->process('flag_row', { 'flag' => $stash->get('flag'), 'type' => $stash->get('type') });;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 44 "template/en/default/flag/list.html.tmpl"
    $stash->set('flag', '');
    $output .=  "\n";
    
#line 49 "template/en/default/flag/list.html.tmpl"
    if ((! $stash->get(['type', 0, 'flags', 0]) || $stash->get(['type', 0, 'flags', 0, 'size', 0]) eq 0) && $stash->get(['type', 0, 'is_active', 0])) {
#line 48 "template/en/default/flag/list.html.tmpl"
    $output .=  $context->process('flag_row', { 'type' => $stash->get('type') });
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n  ";
#line 62 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
#line 54 "template/en/default/flag/list.html.tmpl"
    if (!($stash->get(['type', 0, 'flags', 0]) && $stash->get(['type', 0, 'flags', 0, 'size', 0]) > 0 && $stash->get(['type', 0, 'is_multiplicable', 0]) && $stash->get(['type', 0, 'is_active', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 60 "template/en/default/flag/list.html.tmpl"
    if (! $stash->get('separator_displayed')) {
    $output .=  "\n      <tbody class=\"bz_flag_type\">\n        <tr><td colspan=\"3\"><hr></td></tr>\n      </tbody>";
#line 59 "template/en/default/flag/list.html.tmpl"
    $stash->set('separator_displayed', 1);
    }
    
#line 61 "template/en/default/flag/list.html.tmpl"
    $output .=  $context->process('flag_row', { 'type' => $stash->get('type'), 'addl_text' => 'addl.' });;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n";
    }
    else {
    $output .=  "\n  ";
#line 67 "template/en/default/flag/list.html.tmpl"
    $stash->set('header_displayed', 0);
#line 88 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
#line 87 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['type', 0, 'flags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'flag'} = $_tt_value;
#line 73 "template/en/default/flag/list.html.tmpl"
    if (! $stash->get('flag_no_header') && ! $stash->get('header_displayed')) {
    $output .=  "\n        <p><b>Flags:</b></p>";
#line 72 "template/en/default/flag/list.html.tmpl"
    $stash->set('header_displayed', 1);
    }
    
#line 78 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'setter', 0, 'name', 0])) {
    $output .=  "\n        <span title=\"";
#line 75 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'setter', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 75 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</span>:";
    }
    else {
#line 77 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ":";
    }
    
    $output .=  "\n      ";
#line 79 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('no_break')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
#line 79 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'status', 0]);
#line 86 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'requestee', 0])) {
#line 85 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'requestee', 0, 'name', 0])) {
    $output .=  "\n          (<span title=\"";
#line 82 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'requestee', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 82 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'requestee', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</span>)";
    }
    else {
    $output .=  "\n          (";
#line 84 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'requestee', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ")";
    }
    
    }
    
    $output .=  "<br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'flag_row' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 94 "template/en/default/flag/list.html.tmpl"
        if (! $stash->get('flag') && ! (($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || $stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]))) {
        $context->throw('return', '', \$output);
        }
        
#line 1 "template/en/default/flag/list.html.tmpl"
        $stash->set('fid', $stash->get('flag') ? ("flag-" . $stash->get(['flag', 0, 'id', 0])) : ("flag_type-" . $stash->get(['type', 0, 'id', 0])));
        $output .=  "\n  <tbody";
#line 96 "template/en/default/flag/list.html.tmpl"
        if (! $stash->get('flag')) {
        $output .=  ' class="bz_flag_type"';
        }
        
        $output .=  ">\n    <tr>\n      <td>";
#line 103 "template/en/default/flag/list.html.tmpl"
        if ($stash->get('flag')) {
        $output .=  "\n          <span title=\"";
#line 100 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['flag', 0, 'setter', 0, 'identity', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 100 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</span>:";
        }
        else {
#line 102 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('addl_text');
            
            &$_tt_filter($output);
        };
        
        }
        
        $output .=  "\n      </td>\n      <td>\n        <label title=\"";
#line 106 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'description', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" for=\"";
#line 106 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('fid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 107 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('no_break')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "</label>\n      </td>\n      <td>\n        <input type=\"hidden\" id=\"";
#line 110 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('fid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "_dirty\">\n        <select id=\"";
#line 111 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('fid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" name=\"";
#line 111 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('fid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"\n                title=\"";
#line 112 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'description', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"\n                onchange=\"toggleRequesteeField(this);\"\n                class=\"flag_select flag_type-";
#line 114 "template/en/default/flag/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\">\n        ";
#line 118 "template/en/default/flag/list.html.tmpl"
        if (! $stash->get('flag') || $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]]) || $stash->get(['flag', 0, 'setter_id', 0]) eq $stash->get(['user', 0, 'id', 0])) {
        $output .=  "\n          <option value=\"X\"></option>";
        }
        
#line 131 "template/en/default/flag/list.html.tmpl"
        if ($stash->get(['type', 0, 'is_active', 0])) {
#line 122 "template/en/default/flag/list.html.tmpl"
        if (($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '?')) {
        $output .=  "\n            <option value=\"?\" ";
#line 121 "template/en/default/flag/list.html.tmpl"
        if ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '?') {
        $output .=  'selected';
        }
        
        $output .=  ">?</option>";
        }
        
#line 125 "template/en/default/flag/list.html.tmpl"
        if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]) || ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '+')) {
        $output .=  "\n            <option value=\"+\" ";
#line 124 "template/en/default/flag/list.html.tmpl"
        if ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '+') {
        $output .=  'selected';
        }
        
        $output .=  ">+</option>";
        }
        
#line 128 "template/en/default/flag/list.html.tmpl"
        if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]) || ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '-')) {
        $output .=  "\n            <option value=\"-\" ";
#line 127 "template/en/default/flag/list.html.tmpl"
        if ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '-') {
        $output .=  'selected';
        }
        
        $output .=  ">-</option>";
        }
        
        }
        else {
        $output .=  "\n          <option value=\"";
#line 130 "template/en/default/flag/list.html.tmpl"
        $output .=  $stash->get(['flag', 0, 'status', 0]);
        $output .=  "\" selected=\"selected\">";
#line 130 "template/en/default/flag/list.html.tmpl"
        $output .=  $stash->get(['flag', 0, 'status', 0]);
        $output .=  "</option>";
        }
        
        $output .=  "\n        </select>\n      </td>";
#line 164 "template/en/default/flag/list.html.tmpl"
        if ($stash->get('any_flags_requesteeble')) {
        $output .=  "\n        <td>";
#line 162 "template/en/default/flag/list.html.tmpl"
        if (($stash->get(['type', 0, 'is_active', 0]) && $stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0])) || ($stash->get('flag') && $stash->get(['flag', 0, 'requestee', 0]))) {
        $output .=  "\n            <span style=\"white-space: nowrap;\">";
#line 138 "template/en/default/flag/list.html.tmpl"
        $stash->set('grant_list', [ ]);
#line 147 "template/en/default/flag/list.html.tmpl"
        if ($stash->get(['Param', [ 'usemenuforusers' ]])) {
#line 140 "template/en/default/flag/list.html.tmpl"
        $stash->set('grant_list', $stash->get(['type', 0, 'grant_list', 0]));
#line 146 "template/en/default/flag/list.html.tmpl"
        if ($stash->get('flag') && ! ($stash->get(['type', 0, 'is_active', 0]) && $stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0]))) {
        $output .=  "\n                  ";
#line 145 "template/en/default/flag/list.html.tmpl"
        $stash->set('grant_list', [ $stash->get(['flag', 0, 'requestee', 0]) ]);
        }
        
        }
        
#line 1 "template/en/default/flag/list.html.tmpl"
        $stash->set('flag_name', $stash->get('flag') ? ("requestee-" . $stash->get(['flag', 0, 'id', 0])) : ("requestee_type-" . $stash->get(['type', 0, 'id', 0])));
#line 149 "template/en/default/flag/list.html.tmpl"
        $stash->set('flag_requestee', ($stash->get('flag') && $stash->get(['flag', 0, 'requestee', 0])) ? $stash->get(['flag', 0, 'requestee', 0, 'login', 0]) : '');
#line 150 "template/en/default/flag/list.html.tmpl"
        $stash->set('flag_multiple', $stash->get('flag') ? 0 : $stash->get(['type', 0, 'is_multiplicable', 0]) * 3);
#line 151 "template/en/default/flag/list.html.tmpl"
        $stash->set('flag_empty_ok', $stash->get('flag') ? 1 : ! $stash->get(['type', 0, 'is_multiplicable', 0]));
#line 152 "template/en/default/flag/list.html.tmpl"
        $output .=  $context->include('global/userselect.html.tmpl', { 'name' => $stash->get('flag_name'), 'id' => $stash->get('flag_name'), 'value' => $stash->get('flag_requestee'), 'multiple' => $stash->get('flag_multiple'), 'emptyok' => $stash->get('flag_empty_ok'), 'classes' => [ 'requestee' ], 'custom_userlist' => $stash->get('grant_list') });
        $output .=  "\n            </span>";
        }
        
        $output .=  "\n        </td>";
        }
        
        $output .=  "\n    </tr>\n  </tbody>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
