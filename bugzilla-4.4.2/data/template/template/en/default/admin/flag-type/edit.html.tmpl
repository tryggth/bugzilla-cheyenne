use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1390865808',
        'name' => 'admin/flag-type/edit.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 9 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $context->process('global/js-products.html.tmpl');
    $output .=  "\n";
#line 22 "template/en/default/admin/flag-type/edit.html.tmpl"
    if ($stash->get('action') eq 'insert') {
#line 17 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "\n    Create Flag Type for ";
#line 13 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $stash->get(['type', 0, 'target_type', 0]) eq 'bug' ? $stash->get(['terms', 0, 'Bugs', 0]) : 'Attachments';
#line 16 "template/en/default/admin/flag-type/edit.html.tmpl"
    if ($stash->get(['type', 0, 'id', 0])) {
    $output .=  "\n      Based on ";
#line 15 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    }
    
        $output;
    });
    
#line 18 "template/en/default/admin/flag-type/edit.html.tmpl"
    $stash->set('doc_section', 'flags-overview.html#flags-create');
    }
    else {
#line 20 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Edit Flag Type ";
#line 20 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
#line 21 "template/en/default/admin/flag-type/edit.html.tmpl"
    $stash->set('doc_section', 'flags-overview.html#flags-edit');
    }
    
    $output .=  "\n";
#line 24 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title'), 'style' => '
        table#form th { text-align: right; vertical-align: baseline; white-space: nowrap; }
        table#form td { text-align: left; vertical-align: baseline; }
      ', 'onload' => 'var f = document.forms[\'flagtype_properties\'];
              selectProduct(f.product, f.component, null, null, \'__Any__\');', 'javascript_urls' => [ 'js/productform.js' ], 'doc_section' => $stash->get('doc_section') });
    $output .=  "\n\n<form id=\"flagtype_properties\" method=\"post\" action=\"editflagtypes.cgi\">\n  <input type=\"hidden\" name=\"action\" value=\"";
#line 37 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('action');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  <input type=\"hidden\" name=\"can_fully_edit\" value=\"";
#line 38 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('can_fully_edit');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  <input type=\"hidden\" name=\"id\" value=\"";
#line 39 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  <input type=\"hidden\" name=\"token\" value=\"";
#line 40 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  <input type=\"hidden\" name=\"target_type\" value=\"";
#line 41 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'target_type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  <input type=\"hidden\" name=\"check_clusions\" value=\"";
#line 42 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('check_clusions');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 45 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['inclusions', 0, 'values', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'category'} = $_tt_value;
    $output .=  "\n    <input type=\"hidden\" name=\"inclusions\" value=\"";
#line 44 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('category');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 48 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['exclusions', 0, 'values', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'category'} = $_tt_value;
    $output .=  "\n    <input type=\"hidden\" name=\"exclusions\" value=\"";
#line 47 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('category');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n  ";
    $output .=  "\n  <input type=\"submit\" id=\"commit\" value=\"Submit\" style=\"display: none;\">\n\n  <table id=\"form\" cellspacing=\"0\" cellpadding=\"4\" border=\"0\">\n    <tr>\n      <th>Name:</th>\n      <td>\n        a short name identifying this type.<br>\n        <input type=\"text\" name=\"name\" value=\"";
#line 59 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" size=\"50\"\n               maxlength=\"50\" ";
#line 60 "template/en/default/admin/flag-type/edit.html.tmpl"
    if (!($stash->get('can_fully_edit'))) {
    $output .=  ' disabled="disabled"';
    }
    
    $output .=  ">\n      </td>\n    </tr>\n\n    <tr>\n      <th>Description:</th>\n      <td>\n        a comprehensive description of this type.<br>";
#line 68 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $context->include('global/textarea.html.tmpl', { 'name' => 'description', 'minrows' => 4, 'cols' => 80, 'defaultcontent' => $stash->get(['type', 0, 'description', 0]), 'disabled' => ! $stash->get('can_fully_edit') });
    $output .=  "\n      </td>\n    </tr>\n\n    <tr>\n      <th>Category:</th>\n\n      <td>\n        the products/components to which ";
#line 82 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $stash->get(['type', 0, 'target_type', 0]) eq 'bug' ? $stash->get(['terms', 0, 'bugs', 0]) : 'attachments';
    $output .=  "\n        must (inclusions) or must not (exclusions) belong in order for users\n        to be able to set flags of this type for them.";
#line 90 "template/en/default/admin/flag-type/edit.html.tmpl"
    if (!($stash->get('can_fully_edit'))) {
    $output .=  "\n          <p class=\"warning\">This flagtype also applies to some products you are not allowed\n          to edit (and so which are not displayed in the lists below). Your limited privileges\n          means you are only allowed to add and remove this flagtype to/from products you can\n          edit, but not to edit other properties of the flagtype.</p>";
    }
    
    $output .=  "\n        <table>\n          <tr>\n            <td style=\"vertical-align: top;\">\n              <b>Product/Component:</b><br>\n              <select name=\"product\" onchange=\"selectProduct(this, this.form.component, null, null, '__Any__');\">\n                <option value=\"\">__Any__</option>";
#line 99 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('products');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'prod'} = $_tt_value;
    $output .=  "\n                  <option value=\"";
#line 98 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['prod', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 98 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['prod', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n              </select><br>\n              <select name=\"component\">\n                <option value=\"\">__Any__</option>";
#line 105 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('components');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'comp'} = $_tt_value;
    $output .=  "\n                  <option value=\"";
#line 104 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('comp');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 104 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('comp');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n              </select><br>\n              <input type=\"submit\" id=\"categoryAction-include\" \n                                   name=\"categoryAction-include\" value=\"Include\">\n              <input type=\"submit\" id=\"categoryAction-exclude\"\n                                   name=\"categoryAction-exclude\" value=\"Exclude\">\n            </td>\n            <td style=\"vertical-align: top;\">\n              <b>Inclusions:</b><br>";
#line 114 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $context->process('category_select', { 'name' => 'inclusion_to_remove', 'categories' => $stash->get('inclusions') });
    $output .=  "<br>\n              <input type=\"submit\" id=\"categoryAction-removeInclusion\" \n                     name=\"categoryAction-removeInclusion\" value=\"Remove Inclusion\">\n            </td>\n            <td style=\"vertical-align: top;\">\n              <b>Exclusions:</b><br>";
#line 120 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $context->process('category_select', { 'name' => 'exclusion_to_remove', 'categories' => $stash->get('exclusions') });
    $output .=  "<br>\n              <input type=\"submit\" id=\"categoryAction-removeExclusion\" \n                     name=\"categoryAction-removeExclusion\" value=\"Remove Exclusion\">\n            </td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n\n    <tr>\n      <th>Sort Key:</th>\n      <td>\n        a number between 1 and ";
#line 132 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  '32767';
        
        &$_tt_filter($output);
    };
    
    $output .=  " by which\n        this type will be sorted when displayed to users in a list; ignore if you\n        don't care what order the types appear in or if you want them to appear\n        in alphabetical order.<br>\n        <input type=\"text\" name=\"sortkey\" value=\"";
#line 136 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'sortkey', 0]) || 1;
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" size=\"5\"\n               maxlength=\"5\" ";
#line 137 "template/en/default/admin/flag-type/edit.html.tmpl"
    if (!($stash->get('can_fully_edit'))) {
    $output .=  ' disabled="disabled"';
    }
    
    $output .=  ">\n      </td>\n    </tr>\n\n    <tr>\n      <th>&nbsp;</th>\n      <td>\n        <input type=\"checkbox\" id=\"is_active\" name=\"is_active\"";
#line 145 "template/en/default/admin/flag-type/edit.html.tmpl"
    if (!($stash->get('can_fully_edit'))) {
    $output .=  ' disabled="disabled"';
    }
    
#line 146 "template/en/default/admin/flag-type/edit.html.tmpl"
    if ($stash->get(['type', 0, 'is_active', 0]) || ! $stash->get(['type', 0, 'is_active', 0, 'defined', 0])) {
    $output .=  ' checked';
    }
    
    $output .=  ">\n        <label for=\"is_active\">active (flags of this type appear in the UI and can be set)</label>\n      </td>\n    </tr>\n\n    <tr>\n      <th>&nbsp;</th>\n      <td>\n        <input type=\"checkbox\" id=\"is_requestable\" name=\"is_requestable\"";
#line 155 "template/en/default/admin/flag-type/edit.html.tmpl"
    if (!($stash->get('can_fully_edit'))) {
    $output .=  ' disabled="disabled"';
    }
    
#line 156 "template/en/default/admin/flag-type/edit.html.tmpl"
    if ($stash->get(['type', 0, 'is_requestable', 0]) || ! $stash->get(['type', 0, 'is_requestable', 0, 'defined', 0])) {
    $output .=  ' checked';
    }
    
    $output .=  ">\n        <label for=\"is_requestable\">requestable (users can ask for flags of this type to be set)</label>\n      </td>\n    </tr>\n\n    <tr>\n      <th>CC List:</th>\n      <td>\n        if requestable, who should get carbon copied on email notification of requests.\n        This is a comma-separated list of full e-mail addresses which do not\n        need to be ";
#line 166 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " logins.";
#line 171 "template/en/default/admin/flag-type/edit.html.tmpl"
    if ($stash->get(['Param', [ 'emailsuffix' ]])) {
    $output .=  "\n          Note that the configured emailsuffix\n          <kbd>";
#line 169 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $stash->get(['Param', [ 'emailsuffix' ]]);
    $output .=  "</kbd> will <em>not</em> be appended\n          to these addresses, so you should add it explicitly if so desired.";
    }
    
    $output .=  "<br>\n        <input type=\"text\" name=\"cc_list\" value=\"";
#line 172 "template/en/default/admin/flag-type/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'cc_list', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" size=\"80\"\n               maxlength=\"200\" ";
#line 173 "template/en/default/admin/flag-type/edit.html.tmpl"
    if (!($stash->get('can_fully_edit'))) {
    $output .=  ' disabled="disabled"';
    }
    
    $output .=  ">\n      </td>\n    </tr>\n\n    <tr>\n      <th>&nbsp;</th>\n      <td>\n        <input type=\"checkbox\" id=\"is_requesteeble\" name=\"is_requesteeble\"";
#line 181 "template/en/default/admin/flag-type/edit.html.tmpl"
    if (!($stash->get('can_fully_edit'))) {
    $output .=  ' disabled="disabled"';
    }
    
#line 182 "template/en/default/admin/flag-type/edit.html.tmpl"
    if ($stash->get(['type', 0, 'is_requesteeble', 0]) || ! $stash->get(['type', 0, 'is_requesteeble', 0, 'defined', 0])) {
    $output .=  ' checked';
    }
    
    $output .=  ">\n        <label for=\"is_requesteeble\">specifically requestable (users can ask specific other users\n          to set flags of this type as opposed to just asking the wind)</label>\n      </td>\n    </tr>\n\n    <tr>\n      <th>&nbsp;</th>\n      <td>\n        <input type=\"checkbox\" id=\"is_multiplicable\" name=\"is_multiplicable\"";
#line 192 "template/en/default/admin/flag-type/edit.html.tmpl"
    if (!($stash->get('can_fully_edit'))) {
    $output .=  ' disabled="disabled"';
    }
    
#line 193 "template/en/default/admin/flag-type/edit.html.tmpl"
    if ($stash->get(['type', 0, 'is_multiplicable', 0]) || ! $stash->get(['type', 0, 'is_multiplicable', 0, 'defined', 0])) {
    $output .=  ' checked';
    }
    
    $output .=  ">\n        <label for=\"is_multiplicable\">multiplicable (multiple flags of this type can be set on\n          the same ";
#line 195 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $stash->get(['type', 0, 'target_type', 0]) eq 'bug' ? $stash->get(['terms', 0, 'bug', 0]) : 'attachment';
    $output .=  ")</label>\n      </td>\n    </tr>\n\n    <tr>\n      <th>Grant Group:</th>\n      <td>\n        the group allowed to grant/deny flags of this type\n        (to allow all users to grant/deny these flags, select no group).<br>";
#line 204 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $context->process('group_select', { 'selname' => 'grant_group' });
    $output .=  "\n      </td>\n    </tr>\n\n    <tr>\n      <th>Request Group:</th>\n      <td>\n        if flags of this type are requestable, the group allowed to request them\n        (to allow all users to request these flags, select no group).<br>\n        Note that the request group alone has no effect if the grant group is not defined!<br>";
#line 214 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $context->process('group_select', { 'selname' => 'request_group' });
    $output .=  "\n      </td>\n    </tr>\n\n    <tr>\n      <th>&nbsp;</th>\n      <td>\n        <input type=\"submit\" id=\"save\" value=\"";
#line 221 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $stash->get('action') eq 'insert' ? 'Create' : 'Save Changes';
    $output .=  "\">\n      </td>\n    </tr>\n\n  </table>\n\n</form>\n";
#line 229 "template/en/default/admin/flag-type/edit.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'group_select' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <select name=\"";
#line 237 "template/en/default/admin/flag-type/edit.html.tmpl"
        $output .=  $stash->get('selname');
        $output .=  "\" id=\"";
#line 237 "template/en/default/admin/flag-type/edit.html.tmpl"
        $output .=  $stash->get('selname');
        $output .=  "\" ";
#line 237 "template/en/default/admin/flag-type/edit.html.tmpl"
        if (!($stash->get('can_fully_edit'))) {
        $output .=  ' disabled="disabled"';
        }
        
        $output .=  ">\n    <option value=\"\">(no group)</option>";
#line 239 "template/en/default/admin/flag-type/edit.html.tmpl"
        $stash->set('group_found', 0);
#line 248 "template/en/default/admin/flag-type/edit.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get('groups');
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'group'} = $_tt_value;
        $output .=  "\n      <option value=\"";
#line 241 "template/en/default/admin/flag-type/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['group', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"";
#line 245 "template/en/default/admin/flag-type/edit.html.tmpl"
        if ($stash->get(['type', 0, $stash->get('selname'), 0]) && $stash->get(['type', 0, $stash->get('selname'), 0, 'name', 0]) eq $stash->get(['group', 0, 'name', 0])) {
#line 243 "template/en/default/admin/flag-type/edit.html.tmpl"
        $output .=  ' selected="selected"';
#line 244 "template/en/default/admin/flag-type/edit.html.tmpl"
        $stash->set('group_found', 1);
        }
        
        $output .=  ">";
#line 246 "template/en/default/admin/flag-type/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['group', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
#line 253 "template/en/default/admin/flag-type/edit.html.tmpl"
        if (! $stash->get('group_found') && $stash->get(['type', 0, $stash->get('selname'), 0, 'name', 0])) {
        $output .=  "\n      <option value=\"";
#line 250 "template/en/default/admin/flag-type/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, $stash->get('selname'), 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" selected=\"selected\">";
#line 251 "template/en/default/admin/flag-type/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, $stash->get('selname'), 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";
        }
        
        $output .=  "\n  </select>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'category_select' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <select name=\"";
#line 258 "template/en/default/admin/flag-type/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('name');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" multiple=\"multiple\" size=\"7\">";
#line 263 "template/en/default/admin/flag-type/edit.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['categories', 0, 'keys', 0, 'sort', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'option'} = $_tt_value;
        $output .=  "\n      <option value=\"";
#line 260 "template/en/default/admin/flag-type/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['categories', 0, $stash->get('option'), 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 261 "template/en/default/admin/flag-type/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('option');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n      </option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n  </select>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
