use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/components/edit-common.html.tmpl',
        'modtime' => '1390865808',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n\n";
#line 15 "template/en/default/admin/components/edit-common.html.tmpl"
    $stash->set('desc_name', 'description', 1);
    $output .=  "\n\n<tr>\n  <th class=\"field_label\"><label for=\"component\">Component:</label></th>\n  <td><input size=\"64\" maxlength=\"64\" name=\"component\" id=\"component\"\n             value=\"";
#line 20 "template/en/default/admin/components/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['comp', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"></td>\n</tr>\n<tr>\n  <th class=\"field_label\"><label for=\"";
#line 23 "template/en/default/admin/components/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('desc_name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Component Description:</label></th>\n  <td>";
#line 25 "template/en/default/admin/components/edit-common.html.tmpl"
    $output .=  $context->include('global/textarea.html.tmpl', { 'name' => $stash->get('desc_name'), 'id' => $stash->get('desc_name'), 'minrows' => 4, 'cols' => 64, 'wrap' => 'virtual', 'defaultcontent' => $stash->get(['comp', 0, 'description', 0]) });
    $output .=  "\n  </td>\n</tr>\n<tr>\n  <th class=\"field_label\"><label for=\"initialowner\">Default Assignee:</label></th>\n  <td>";
#line 38 "template/en/default/admin/components/edit-common.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'name' => 'initialowner', 'id' => 'initialowner', 'value' => $stash->get(['comp', 0, 'default_assignee', 0, 'login', 0]), 'size' => 64 });
    $output .=  "\n  </td>\n</tr>";
#line 59 "template/en/default/admin/components/edit-common.html.tmpl"
    if ($stash->get(['Param', [ 'useqacontact' ]])) {
    $output .=  "\n  <tr>\n    <th class=\"field_label\"><label for=\"initialqacontact\">Default QA contact:</label></th>\n    <td>";
#line 50 "template/en/default/admin/components/edit-common.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'name' => 'initialqacontact', 'id' => 'initialqacontact', 'value' => $stash->get(['comp', 0, 'default_qa_contact', 0, 'login', 0]), 'size' => 64, 'emptyok' => 1 });
    $output .=  "\n    </td>\n  </tr>";
    }
    
    $output .=  "\n<tr>\n  <th class=\"field_label\"><label for=\"initialcc\">Default CC List:</label></th>\n  <td>";
#line 63 "template/en/default/admin/components/edit-common.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'name' => 'initialcc', 'id' => 'initialcc', 'value' => $stash->get('initial_cc_names'), 'size' => 64, 'multiple' => 5 });
    $output .=  "\n    <br>";
#line 73 "template/en/default/admin/components/edit-common.html.tmpl"
    if (! $stash->get(['Param', [ 'usemenuforusers' ]])) {
    $output .=  "\n      <em>Enter user names for the CC list as a comma-separated list.</em>";
    }
    
    $output .=  "\n  </td>\n</tr>\n";
#line 77 "template/en/default/admin/components/edit-common.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'rows' ]]);
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
