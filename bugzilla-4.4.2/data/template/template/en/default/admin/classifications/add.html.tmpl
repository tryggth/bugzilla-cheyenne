use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/classifications/add.html.tmpl',
        'modtime' => '1390865808',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 9 "template/en/default/admin/classifications/add.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Add new classification' });
    $output .=  "\n\n<form method=post action=\"editclassifications.cgi\">\n  <table border=0 cellpadding=4 cellspacing=0>\n";
#line 16 "template/en/default/admin/classifications/add.html.tmpl"
    $output .=  $context->process('admin/classifications/edit-common.html.tmpl');
    $output .=  "\n\n  </table>\n  <hr>\n  <input type=submit value=\"Add\">\n  <input type=hidden name=\"action\" value=\"new\">\n  <input type=\"hidden\" name=\"token\" value=\"";
#line 22 "template/en/default/admin/classifications/add.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n</FORM>\n";
#line 25 "template/en/default/admin/classifications/add.html.tmpl"
    $output .=  $context->process('admin/classifications/footer.html.tmpl');
    $output .=  " \n";
#line 27 "template/en/default/admin/classifications/add.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  " \n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
