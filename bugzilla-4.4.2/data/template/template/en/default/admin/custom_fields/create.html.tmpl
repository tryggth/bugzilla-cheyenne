use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/custom_fields/create.html.tmpl',
        'modtime' => '1390865808',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 13 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n";
#line 17 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # CAPTURE
    $stash->set('javascript', do {
        my $output = '';
#line 16 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $context->include('admin/custom_fields/cf-js.js.tmpl');
        $output;
    });
    
    $output .=  "\n";
#line 19 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Add a new Custom Field', 'onload' => 'document.getElementById(\'new_bugmail\').disabled = true;', 'javascript_urls' => [ 'js/util.js' ], 'doc_section' => 'custom-fields.html#add-custom-fields', 'style_urls' => [ 'skins/standard/admin.css' ] });
    $output .=  "\n\n";
    $output .=  "\n<script type=\"text/javascript\">\nYAHOO.util.Event.onDOMReady(function() {onChangeType(document.getElementById('type'))});\n</script>\n\n<p>\n  Adding custom fields can make the interface of ";
#line 33 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " very\n  complicated. Many admins who are new to ";
#line 34 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " start off\n  adding many custom fields, and then their users complain that the interface\n  is \"too complex\". Please think carefully before adding any custom fields.\n  It may be the case that ";
#line 37 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " already does what you need,\n  and you just haven't enabled the correct feature yet.\n</p>\n\n<ul>\n  <li>Custom field names must begin with \"cf_\" to distinguish them from\n      standard fields. If you omit \"cf_\" from the beginning of the name, it\n      will be added for you.</li>\n  <li>Descriptions are a very short string describing the field and will be\n      used as the label for this field in the user interface.</li>\n</ul>\n\n<form id=\"add_field\" action=\"editfields.cgi\" method=\"GET\">\n  <table border=\"0\" cellspacing=\"0\" cellpadding=\"5\" id=\"edit_custom_field\">\n    <tr>\n      <th class=\"narrow_label\"><label for=\"name\">Name:</label></th>\n      <td>\n        <input type=\"text\" id=\"name\" name=\"name\" value=\"cf_\" size=\"40\" maxlength=\"64\">\n      </td>\n\n      <th>\n        <label for=\"enter_bug\">Can be set on ";
#line 58 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " creation:</label>\n      </th>\n      <td>\n        <input type=\"checkbox\" id=\"enter_bug\" name=\"enter_bug\" value=\"1\"\n               onchange=\"toggleCheckbox(this, 'new_bugmail');\">\n      </td>\n    </tr>\n    <tr>\n      <th class=\"narrow_label\"><label for=\"desc\">Description:</label></th>\n      <td><input type=\"text\" id=\"desc\" name=\"desc\" value=\"\" size=\"40\"></td>\n\n      <th>\n        <label for=\"new_bugmail\">Displayed in ";
#line 70 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "mail for new ";
#line 70 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ":</label>\n      </th>\n      <td><input type=\"checkbox\" id=\"new_bugmail\" name=\"new_bugmail\" value=\"1\"></td>\n    </tr>\n    <tr>\n      <th class=\"narrow_label\"><label for=\"type\">Type:</label></th>\n      <td>\n        <select id=\"type\" name=\"type\" onchange=\"onChangeType(this)\">";
#line 81 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['field_types', 0, 'keys', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
#line 79 "template/en/default/admin/custom_fields/create.html.tmpl"
    if ($stash->get('type') eq '0') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
    $output .=  "\n            <option value=\"";
#line 80 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 80 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_types', 0, $stash->get('type'), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </select>\n      </td>\n\n      <th><label for=\"obsolete\">Is obsolete:</label></th>\n      <td><input type=\"checkbox\" id=\"obsolete\" name=\"obsolete\" value=\"1\"></td>\n    </tr>\n    <tr>\n      <th class=\"narrow_label\"><label for=\"sortkey\">Sortkey:</label></th>\n      <td>\n        <input type=\"text\" id=\"sortkey\" name=\"sortkey\" size=\"6\" maxlength=\"6\">\n      </td>\n\n      <th align=\"right\"><label for=\"is_mandatory\">Is mandatory:</label></th>\n      <td><input type=\"checkbox\" id=\"is_mandatory\" name=\"is_mandatory\" value=\"1\"></td>\n    </tr>\n\n    <tr>\n      <th class=\"narrow_label\">Long Description:</th>\n      <td>";
#line 101 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $context->include('global/textarea.html.tmpl', { 'name' => 'long_desc', 'id' => 'long_desc', 'minrows' => 3, 'maxrows' => 5, 'cols' => 46, 'defaultcontent' => $stash->get('defaultcontent') });
    $output .=  "\n      </td>\n      <th>\n        <label for=\"visibility_field_id\">Field only appears when:</label>\n      </th>\n      <td>\n        <select name=\"visibility_field_id\" id=\"visibility_field_id\"\n                onchange=\"onChangeVisibilityField()\">\n          <option></option>";
#line 122 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['Bugzilla', 0, 'fields', [ { 'is_select' => 1  } ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'sel_field'} = $_tt_value;
    $output .=  "\n            <option value=\"";
#line 118 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['sel_field', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 119 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['sel_field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n              (";
#line 120 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['sel_field', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ")\n            </option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </select>\n        <label for=\"visibility_values\">\n          <strong>is set to any of:</strong>\n        </label>\n        <select multiple=\"multiple\" size=\"5\" name=\"visibility_values\"\n                id=\"visibility_values\" class=\"field_value\">\n          <option value=\"\"></option>\n        </select>\n      </td>\n    </tr>\n\n    <tr>\n      <th class=\"narrow_label\">\n        <label for=\"reverse_desc\">Reverse Relationship Description:</label>\n      </th>\n      <td>\n        <input type=\"text\" id=\"reverse_desc\" name=\"reverse_desc\" value=\"\" size=\"40\" disabled=\"disabled\">\n        <br/>\n        Use this label for the list of ";
#line 141 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " that link to\n        ";
#line 142 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " with this \n        ";
#line 143 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_types', 0, '6', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n        field. For example, if the description is \"Is a duplicate of\",\n        the reverse description would be \"Duplicates of this ";
#line 145 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "\".\n        Leave blank to disable the list for this field.\n      </td>\n      <th>\n        <label for=\"value_field_id\">\n          Field that controls the values<br>\n          that appear in this field:\n        </label>\n      </th>\n\n      <td>\n        <select disabled=\"disabled\" name=\"value_field_id\" id=\"value_field_id\">\n          <option></option>";
#line 163 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['Bugzilla', 0, 'fields', [ { 'is_select' => 1  } ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'sel_field'} = $_tt_value;
    $output .=  "\n            <option value=\"";
#line 159 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['sel_field', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 160 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['sel_field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n              (";
#line 161 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['sel_field', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ")\n            </option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </select>\n      </td>\n    </tr>\n  </table>\n  <p>\n    <input type=\"hidden\" name=\"action\" value=\"new\">\n    <input type=\"hidden\" name=\"token\" value=\"";
#line 170 "template/en/default/admin/custom_fields/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    <input type=\"submit\" id=\"create\" value=\"Create\">\n  </p>\n</form>\n\n<p>\n  <a href=\"editfields.cgi\">Back to the list of existing custom fields</a>\n</p>\n";
#line 179 "template/en/default/admin/custom_fields/create.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
