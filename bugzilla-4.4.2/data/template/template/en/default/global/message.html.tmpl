use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'global/message.html.tmpl',
        'modtime' => '1390865808',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 1 "template/en/default/global/message.html.tmpl"
    $stash->set('title', ($stash->get(['terms', 0, 'Bugzilla', 0]) . " Message"), 1);
    $output .=  "\n";
#line 16 "template/en/default/global/message.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl');
    $output .=  "\n\n";
    $output .=  "\n\n";
#line 26 "template/en/default/global/message.html.tmpl"
    if ($stash->get('url') && $stash->get('link')) {
    $output .=  "\n  <p>\n    <a href=\"";
#line 24 "template/en/default/global/message.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('url');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 24 "template/en/default/global/message.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('link');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>\n  </p>";
    }
    
    $output .=  "\n";
#line 28 "template/en/default/global/message.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
