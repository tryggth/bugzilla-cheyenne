use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1390865808',
        'name' => 'whine/mail.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 21 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get('body');
    $output .=  "\n";
#line 28 "template/en/default/whine/mail.txt.tmpl"
    if ($stash->get(['author', 0, 'login', 0]) eq $stash->get(['recipient', 0, 'login', 0])) {
    $output .=  "\n  To edit your whine schedule, visit the following URL:\n  ";
#line 25 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "editwhines.cgi";
    }
    else {
    $output .=  "\n  This search was scheduled by ";
#line 27 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['author', 0, 'login', 0]);
    $output .=  ".";
    }
    
    $output .=  "\n";
#line 61 "template/en/default/whine/mail.txt.tmpl"
    if ($stash->get(['queries', 0, 'size', 0])) {
#line 57 "template/en/default/whine/mail.txt.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('queries');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'query'} = $_tt_value;
    $output .=  "\n\n";
#line 33 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['query', 0, 'title', 0]);
    $output .=  " (";
#line 33 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['query', 0, 'bugs', 0, 'size', 0]);
    $output .=  " ";
#line 33 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ")\n";
#line 34 "template/en/default/whine/mail.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('repeat', [ $stash->get(['query', 0, 'title', 0, 'length', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  '-';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n";
#line 52 "template/en/default/whine/mail.txt.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['query', 0, 'bugs', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'bug'} = $_tt_value;
#line 37 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ";
#line 37 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  ":\n  ";
#line 38 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "show_bug.cgi?id=";
#line 38 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
#line 39 "template/en/default/whine/mail.txt.tmpl"
    $stash->set('largest_title', 0);
#line 45 "template/en/default/whine/mail.txt.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['query', 0, 'columnlist', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR3:   while (! $_tt_error) {
                $stash->{'col'} = $_tt_value;
#line 41 "template/en/default/whine/mail.txt.tmpl"
    if ($stash->get('col') eq 'bug_id') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR3;
    
    }
    
#line 44 "template/en/default/whine/mail.txt.tmpl"
    if ($stash->get(['field_descs', 0, $stash->get('col'), 0, 'length', 0]) > $stash->get('largest_title')) {
#line 43 "template/en/default/whine/mail.txt.tmpl"
    $stash->set('largest_title', $stash->get(['field_descs', 0, $stash->get('col'), 0, 'length', 0]));
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 50 "template/en/default/whine/mail.txt.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['query', 0, 'columnlist', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR3:   while (! $_tt_error) {
                $stash->{'col'} = $_tt_value;
#line 47 "template/en/default/whine/mail.txt.tmpl"
    if ($stash->get('col') eq 'bug_id') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR3;
    
    }
    
    $output .=  "\n  ";
#line 48 "template/en/default/whine/mail.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('repeat', [ $stash->get('largest_title') - $stash->get(['field_descs', 0, $stash->get('col'), 0, 'length', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  ' ';
        
        &$_tt_filter($output);
    };
    
#line 49 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['field_descs', 0, $stash->get('col'), 0]);
    $output .=  ": ";
#line 49 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['display_value', [ $stash->get($stash->get('col')), $stash->get(['bug', 0, $stash->get('col'), 0]) ]]);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
#line 56 "template/en/default/whine/mail.txt.tmpl"
    if ($stash->get(['author', 0, 'login', 0]) eq $stash->get(['recipient', 0, 'login', 0])) {
    $output .=  "\nView as ";
#line 55 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " list: ";
#line 55 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "buglist.cgi?cmdtype=runnamed&namedcmd=";
#line 55 "template/en/default/whine/mail.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['query', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    else {
    $output .=  "\n\n  No ";
#line 60 "template/en/default/whine/mail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " were found that matched the search criteria.";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
