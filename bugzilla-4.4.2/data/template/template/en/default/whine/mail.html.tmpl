use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1390865808',
        'name' => 'whine/mail.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <title>\n      [";
#line 25 "template/en/default/whine/mail.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  "] ";
#line 25 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('subject');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    </title>\n  </head>\n  <body bgcolor=\"#FFFFFF\">\n\n    <pre>";
#line 31 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('body');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    </pre>\n\n    <p align=\"left\">";
#line 40 "template/en/default/whine/mail.html.tmpl"
    if ($stash->get(['author', 0, 'login', 0]) eq $stash->get(['recipient', 0, 'login', 0])) {
    $output .=  "\n        <a href=\"";
#line 36 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('urlbase');
        
        &$_tt_filter($output);
    };
    
    $output .=  "editwhines.cgi\">Click\n            here to edit your whine schedule</a>";
    }
    else {
    $output .=  "\n        This search was scheduled by ";
#line 39 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['author', 0, 'login', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".";
    }
    
    $output .=  "\n    </p>\n";
#line 78 "template/en/default/whine/mail.html.tmpl"
    if ($stash->get(['queries', 0, 'size', 0])) {
#line 74 "template/en/default/whine/mail.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('queries');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'query'} = $_tt_value;
    $output .=  "\n\n    <h2>";
#line 46 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['query', 0, 'title', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " (";
#line 46 "template/en/default/whine/mail.html.tmpl"
    $output .=  $stash->get(['query', 0, 'bugs', 0, 'size', 0]);
    $output .=  " ";
#line 46 "template/en/default/whine/mail.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ")</h2>\n\n    <table width=\"100%\">\n      <tr>\n        <th align=\"left\">ID</th>";
#line 54 "template/en/default/whine/mail.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['query', 0, 'columnlist', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'col'} = $_tt_value;
#line 52 "template/en/default/whine/mail.html.tmpl"
    if ($stash->get('col') eq 'bug_id') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR2;
    
    }
    
    $output .=  "\n          <th align=\"left\">";
#line 53 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('col'), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</th>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n      </tr>\n";
#line 66 "template/en/default/whine/mail.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['query', 0, 'bugs', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'bug'} = $_tt_value;
    $output .=  "\n        <tr>\n          <td align=\"left\"><a href=\"";
#line 59 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('urlbase');
        
        &$_tt_filter($output);
    };
    
    $output .=  "show_bug.cgi?id=";
#line 60 "template/en/default/whine/mail.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "\">";
#line 60 "template/en/default/whine/mail.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "</a></td>";
#line 64 "template/en/default/whine/mail.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['query', 0, 'columnlist', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR3:   while (! $_tt_error) {
                $stash->{'col'} = $_tt_value;
#line 62 "template/en/default/whine/mail.html.tmpl"
    if ($stash->get('col') eq 'bug_id') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR3;
    
    }
    
    $output .=  "\n            <td align=\"left\">";
#line 63 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['display_value', [ $stash->get('col'), $stash->get(['bug', 0, $stash->get('col'), 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </table>\n";
#line 73 "template/en/default/whine/mail.html.tmpl"
    if ($stash->get(['author', 0, 'login', 0]) eq $stash->get(['recipient', 0, 'login', 0])) {
    $output .=  "\n      <p align=\"left\">\n        <a href=\"";
#line 71 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('urlbase');
        
        &$_tt_filter($output);
    };
    
    $output .=  "buglist.cgi?cmdtype=runnamed&amp;namedcmd=";
#line 71 "template/en/default/whine/mail.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['query', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">View as ";
#line 71 "template/en/default/whine/mail.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " list</a>\n      </p>";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    else {
    $output .=  "\n\n  <h3>No ";
#line 77 "template/en/default/whine/mail.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " were found that matched the search criteria.</h3>";
    }
    
    $output .=  "\n  </body>\n</html>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
