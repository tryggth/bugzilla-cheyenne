use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'account/create.html.tmpl',
        'modtime' => '1390865808',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 18 "template/en/default/account/create.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "\n  Create a new ";
#line 17 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " account";
        $output;
    });
    
    $output .=  "\n";
#line 20 "template/en/default/account/create.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title'), 'onload' => 'document.forms[\'account_creation_form\'].login.focus();' });
    $output .=  "\n\n<p>\n  To create a ";
#line 25 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " account, all you need to do is to enter";
#line 31 "template/en/default/account/create.html.tmpl"
    if ($stash->get(['Param', [ 'emailsuffix' ]]) eq '') {
    $output .=  "\n  a legitimate email address.";
    }
    else {
    $output .=  "\n  an account name which when combined with ";
#line 29 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['Param', [ 'emailsuffix' ]]);
    $output .=  "\n  corresponds to an address where you receive email.";
    }
    
    $output .=  "\n  You will receive an email at this address to confirm the creation of your\n  account. <b>You will not be able to log in until you receive the email.</b>\n  If it doesn't arrive within a reasonable amount of time, you may contact\n  the maintainer of this ";
#line 35 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " installation\n  at <a href=\"mailto:";
#line 36 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  "\">";
#line 36 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  "</a>.\n</p>\n\n<p>\n  A user account is required to report new ";
#line 40 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " or to comment into\n  existing ones, as you may be contacted for more information if needed.\n  This also lets other users clearly identify who is the author of comments\n  or changes made into ";
#line 43 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ". <b>Note that your email address will\n  <u>never</u> be displayed to logged out users. Only registered users will be\n  able to see it.</b>\n</p>\n";
#line 56 "template/en/default/account/create.html.tmpl"
    if ($stash->get(['Param', [ 'createemailregexp' ]]) eq '.*' && $stash->get(['Param', [ 'emailsuffix' ]]) eq '') {
    $output .=  "\n<p>\n  <b>PRIVACY NOTICE:</b> ";
#line 50 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " is an open ";
#line 50 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "\n  tracking system. Activity on most ";
#line 51 "template/en/default/account/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ", including email\n  addresses, will be visible to registered users. We <b>recommend</b> using a\n  secondary account or free web email service (such as Gmail, Yahoo,\n  Hotmail, or similar) to avoid receiving spam at your primary email address.\n</p>";
    }
    
    $output .=  "\n\n<form id=\"account_creation_form\" method=\"get\" action=\"createaccount.cgi\">\n  <table>\n    <tr>\n      <td align=\"right\">\n        <b>Email address:</b>\n      </td>\n      <td>\n        <input size=\"35\" id=\"login\" name=\"login\">";
#line 66 "template/en/default/account/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'emailsuffix' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n      </td>\n    </tr>\n  </table>\n  <br>\n  <input type=\"hidden\" id=\"token\" name=\"token\" value=\"";
#line 71 "template/en/default/account/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['issue_hash_token', [ [ 'create_account' ] ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  <input type=\"submit\" id=\"send\" value=\"Send\">\n</form>\n";
#line 75 "template/en/default/account/create.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
