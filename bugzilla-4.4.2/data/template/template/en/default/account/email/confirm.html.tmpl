use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.25
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'account/email/confirm.html.tmpl',
        'modtime' => '1390865808',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n  ";
#line 13 "template/en/default/account/email/confirm.html.tmpl"
    $stash->set('title', 'Confirm Change Email');
#line 14 "template/en/default/account/email/confirm.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl');
    $output .=  "\n\n<p>\n  To change your email address, please enter your current password:\n</p>\n\n<form method=\"post\" action=\"token.cgi\">\n  <input type=\"hidden\" name=\"t\" value=\"";
#line 21 "template/en/default/account/email/confirm.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  <input type=\"hidden\" name=\"a\" value=\"chgem\">\n  <table>\n    <tr>\n      <th align=\"right\">Password:</th>\n      <td><input type=\"password\" name=\"password\" size=\"36\"></td>\n    </tr>\n    <tr>\n      <th align=\"right\">&nbsp;</th>\n      <td><input type=\"submit\" id=\"confirm\" value=\"Submit\"></td>\n    </tr>\n  </table>\n</form>\n";
#line 35 "template/en/default/account/email/confirm.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
